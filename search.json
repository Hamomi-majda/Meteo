[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prévisions météo à Montpellier",
    "section": "",
    "text": "Bienvenue sur notre site web “Prévisions météo à Montpellier”. Sur la page Météo Montpellier, vous trouverez un tableau qui présente la météo à Montpellier. Vous pouvez consulter le code source dans la même page. L’objectif de ce site est de présenter les prévisions météorologiques de Montpellier pour aujourd’hui, ainsi que celles des deux jours précédents et des quatre jours à venir. les informations fournies:\n\n\nla date,\n\n\nle pictogramme,\n\n\nla températures maximale °C,\n\n\nla températures minimale en °C,\n\n\nl’humidité,\n\n\nla vitesse maximale du vent en km/h,\n\n\nla quantité de précipitations en mm.\n\n\nToutes les informations sont extraites d’une API (Interface de Programmation d’Application) sélectionnée et fournie par open-meteo.com."
  },
  {
    "objectID": "meteo.html",
    "href": "meteo.html",
    "title": "Météo Montpellier",
    "section": "",
    "text": "Code\n# Importation des bibliothèques nécessaires\nimport numpy as np\nimport statistics\nimport requests\nimport datetime\nfrom dateutil.relativedelta import relativedelta\n\n# Initialisation des dates de début et de fin pour l'extraction des données\ndate_debut = datetime.datetime.now() - relativedelta(days=2)\ndate_fin = date_debut + relativedelta(days=6)\n\n# Formatage des dates pour l'URL de l'API\ndate_debut_formattee = date_debut.strftime('%Y-%m-%d') \ndate_fin_formattee = date_fin.strftime('%Y-%m-%d')  \n\n# Construction de l'URL pour l'API open-meteo avec les critères spécifiés\nurl = f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6109&longitude=3.8763&hourly=temperature_2m,,relative_humidity_2m,precipitation&daily=weathercode,temperature_2m_max,temperature_2m_min,wind_speed_10m_max,precipitation_sum&timezone=Europe%2FLondon&start_date={date_debut_formattee}&end_date={date_fin_formattee}\"\n\n# Récupération des données depuis l'API\nresponse = requests.get(url)\ndata = response.json()\n\n# Initialisation des tableaux pour les différents paramètres météorologiques\nhumidity = data[\"hourly\"][\"relative_humidity_2m\"]\nprecipitation = data[\"daily\"][\"precipitation_sum\"]\nprecipitation_h = data[\"hourly\"][\"precipitation\"]\nwind = data[\"daily\"][\"wind_speed_10m_max\"]\ntempmin = data[\"daily\"][\"temperature_2m_min\"]\ntempmax = data[\"daily\"][\"temperature_2m_max\"]\nicon = data[\"daily\"][\"weathercode\"]\n\n# Fonction pour formater la date en fonction de l'index donné\ndef date(i):\n    \n    d = datetime.datetime.now() + relativedelta(days=i)\n    return f\"{d.day}-{d.month}-{d.year}\"\n\n\n# Initialisation des tableaux pour l'humidité moyenne et un tableau 2D pour les valeurs horaires de l'humidité\nmeanhumidity = np.zeros(7)\ntab = np.zeros((7, 24))\nt= 0\n# Remplissage du tableau 2D avec les valeurs horaires de l'humidité\nfor i in range(7):\n    for j in range(24):\n        if humidity[t] is None:\n            tab[i, j] = tab[i, j - 1] if j &gt; 0 else 0\n        else:\n            tab[i, j] = humidity[t]\n        t += 1\n# Calcul de l'humidité moyenne pour chaque jour\nfor i in range(7):\n    meanhumidity[i] = round(statistics.mean(tab[i]), 0)  \n\n# Fonction pour obtenir le jour de la semaine en fonction de l'index donné\ndef index(i):\n    \n    jours_semaine = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    return jours_semaine[(datetime.datetime.now().weekday() + i) % 7]  \n\n# Fonction pour mapper le code météo à l'icône correspondante\ndef iconkey(i):\n    \"\"\"\n    Association de chaque code WBO à un pictogramme correspondant. Retourne le chemin d'accès au pictogramme par une chaîne de caractères. Version daily.\n    \"\"\"\n    code = icon[i]\n\n    if code == 0:\n        return \"icon/wi-day-sunny.svg\"\n    elif code == 1:\n        return \"icon/wi-day-sunny-overcast.svg\"\n    elif code == 2:\n        return \"icon/wi-day-cloudy.svg\"\n    elif code == 3:\n        return \"icon/wi-cloud.svg\"\n    elif code in [45, 48]:\n        return \"icon/wi-fog.svg\"\n    elif code in [51, 53, 55, 56, 57]:\n        return \"icon/wi-sprinkle.svg\"\n    elif code in [61, 81, 82]:\n        return \"icon/wi-showers.svg\"\n    elif code == 63:\n        return \"icon/wi-rain-wind.svg\"\n    elif code in [65, 66, 67]:\n        return \"icon/wi-rain.svg\"\n    elif code in [71, 73, 75, 85, 86]:\n        return \"icon/wi-snow.svg\"\n    elif code in [95, 96]:\n        return \"icon/wi-storm-showers.svg\"\n    elif code == 99:\n        return \"icon/wi-thunderstorm.svg\"\n    else:\n        return \"icon/wi-moon-new.svg\"\n\n# Fonction pour afficher l'icône de précipitation en fonction de l'intensité\ndef iconrain(i):\n    \n    \"\"\"\n    Retourne une image sous format HTML correspondant à l'intensité des précipitations.\n    \"\"\"\n    if not isinstance(precipitation[i], float):\n        return \"\"\n\n    intensity = precipitation[i]\n\n    if 0 &lt; intensity &lt;= 2:\n        return f'&lt;img src=\"icon/wi-raindrop.svg\" width=\"20\" height=\"20\" /&gt;'\n    elif intensity &gt; 2:\n        return f'&lt;img src=\"icon/wi-raindrops.svg\" width=\"40\" height=\"40\" /&gt;'\n    else:\n        return \"\"  \n# Calcule la somme des 24 dernières valeurs de precipitation_h\nprecipitation_h = [0 if value is None else value for value in precipitation_h]\nprecipitationd = sum(precipitation_h[-24:])        \n\n# Importation des bibliothèques nécessaires pour afficher du HTML et tabuler les données\nfrom IPython.display import HTML\nfrom tabulate import tabulate\nres = f\"\"\"\n&lt;table class= \"table1-style\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;  \n        &lt;th  style=\"border-top-left-radius : 20px 20px\"&gt; Days &lt;/th&gt;\n        &lt;th&gt;  {index(-2)} &lt;br&gt; &lt;small&gt; {date(-2)} &lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {index(-1)} &lt;br&gt; &lt;small&gt;{date(-1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;   &lt;a  style=\"text-decoration:none\"&gt; Today &lt;br&gt; &lt;small&gt;{date(0)}&lt;/small&gt; &lt;/a&gt;&lt;/th&gt;\n        &lt;th&gt;  {index(1)} &lt;br&gt; &lt;small&gt;{date(1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {index(2)} &lt;br&gt; &lt;small&gt;{date(2)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {index(3)} &lt;br&gt; &lt;small&gt;{date(3)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th  style=\"border-top-right-radius : 20px 20px\" &gt;  {index(4)} &lt;br&gt; &lt;small&gt;{date(4)}&lt;/small&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(0)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(1)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(2)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(3)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(4)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(5)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={iconkey(6)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Temp Max (°C) &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5); font-weight: bold;\" &gt; {tempmax[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(255, 165, 80, 0.5);font-weight: bold;\" &gt; {tempmax[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr &gt; \n        &lt;td&gt;  Temp Min (°C) &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\"&gt; {tempmin[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : rgba(144, 238, 144, 0.5);font-weight: bold;\" &gt; {tempmin[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Humidity &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[0]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[1]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[2]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[3]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[4]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[5]} % &lt;/td&gt;\n        &lt;td&gt; {meanhumidity[6]} % &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Wind Speed Max  &lt;/td&gt;\n        &lt;td&gt; {int(wind[0])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[1])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[2])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[3])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[4])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[5])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(wind[6])} km/h &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td style=\"border-bottom-left-radius : 20px 20px\"&gt; Precipitation &lt;/td&gt;\n        &lt;td&gt; {iconrain(0)} {precipitation[0]} mm &lt;/td&gt;\n        &lt;td&gt; {iconrain(1)} {precipitation [1]} mm &lt;/td&gt;\n        &lt;td&gt; {iconrain(2)} {precipitation[2]} mm &lt;/td&gt;\n        &lt;td&gt; {iconrain(3)} {precipitation[3]} mm &lt;/td&gt;\n        &lt;td&gt; {iconrain(4)} {precipitation[4]} mm &lt;/td&gt;\n        &lt;td&gt; {iconrain(5)} {precipitation[5]} mm &lt;/td&gt;\n        &lt;td style=\"border-bottom-right-radius : 20px 20px\"&gt; {iconrain(6)} {precipitationd} mm &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n\n&lt;/table&gt;\n\"\"\"\nHTML(res)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDays\nThursday\n2-1-2025\nFriday\n3-1-2025\nToday\n4-1-2025\nSunday\n5-1-2025\nMonday\n6-1-2025\nTuesday\n7-1-2025\nWednesday\n8-1-2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTemp Max (°C)\n12.9°C\n11.8°C\n7.8°C\n13.7°C\n13.2°C\n12.0°C\n8.7°C\n\n\nTemp Min (°C)\n7.4°C\n5.4°C\n3.3°C\n6.9°C\n9.0°C\n6.5°C\n6.0°C\n\n\nHumidity\n79.0 %\n65.0 %\n54.0 %\n86.0 %\n84.0 %\n79.0 %\n96.0 %\n\n\nWind Speed Max\n13 km/h\n12 km/h\n10 km/h\n22 km/h\n34 km/h\n24 km/h\n8 km/h\n\n\nPrecipitation\n0.0 mm\n0.0 mm\n0.0 mm\n 0.1 mm\n 0.9 mm\n0.0 mm\n0.0 mm"
  }
]